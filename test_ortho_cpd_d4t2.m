% rng('default') addpath ../..n=30;dim = [	10  10 40 40 ]; sz = dim;r = 30;                     nl = 0.1;t=2;times = 50;MaxIter = 5000;iii = 1;methods = 5;result_mat_iter = zeros(times,8); result_mat_time = zeros(times,8);result_mat_rel_err = zeros(times,8);for iii = 1: timesomega = abs(randn(r,1));% omega = random('f',2,3,r,1);Omega = diag(omega);% Omega = eye(r);A01 = rand(dim(1),r)-1/2; A01 = column_normalization(A01); A1= A01*Omega;B1 = rand(dim(2),r)-1/2; B1 = column_normalization(B1);C1 = rand(dim(3),r)-1/2; [P,L,Q] = svd(C1,'econ');C1 = P;D1 = rand(dim(4),r)-1/2; [P,L,Q] = svd(D1,'econ'); D1 = P;Utrue = {A01,B1,C1,D1};  dim = [size(A1,1) size(B1,1) size(C1,1) size(D1,1)]; A0 = rand(dim(1),r)-1/2; A0 = column_normalization(A0);B0 = rand(dim(2),r)-1/2; B0 = column_normalization(B0);C0 = rand(dim(3),r)-1/2;  [P,L,Q] = svd(C0,'econ');C0 = P;D0 = rand(dim(4),r)-1/2; [P,L,Q] = svd(D0,'econ'); D0 = P;U0 = {A0,B0,C0,D0};U1={A1,B1,C1,D1};T1 = cpdgen(U1);N = randn(dim);  T = T1/frob(T1) + nl* N/frob(N);% T = T1+ nl*N/frob(N);%%%% end of the setting of the problem %%%% beginning of different algorithms.options.Display = 0;options.TolX = 1e-4;options.FastUpdate = false;options.MaxIter = MaxIter;  options.t = t;%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  % good initializer%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%tic[ U0 ] = get_initializer( T, t, r );t_init = toc;g_v_good_init = obj_v_max(T,U0);options.e1 = 0.000; options.e2 = 0.000; tic[U,out] = perturbed_als_orthogonal(T,U0,options);t01=toc; iter01 = out.iterations;fval0 = out.fval;rec0 = fval0(end);U00{1} = column_matching(A01,U{1}); U00{2} = column_matching(B1,U{2});U00{3} = column_matching(C1,U{3});U00{4} = column_matching(D1,U{4});norm_diff01   = diff_U_Uout( Utrue, U00  );    gval01 =  obj_v_max( T,U );%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%options.e1 = 0.00000001; options.e2 = 0.00000001; tic[U,out] = perturbed_als_orthogonal(T,U0,options);t11=toc;iter11 = out.iterations;fval1 = out.fval;rec1 = fval1(end);U1{1} = column_matching(A01,U{1}); U1{2} = column_matching(B1,U{2});U1{3} = column_matching(C1,U{3});U1{4} = column_matching(D1,U{4});  norm_diff11   = diff_U_Uout( Utrue, U1  );%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  options.e1 = 0.000001; options.e2 = 0.000001; tic[U,out] = perturbed_als_orthogonal(T,U0,options);t21=toc;iter21 = out.iterations;fval2 = out.fval;rec2 = fval2(end); U2{1} = column_matching(A01,U{1}); U2{2} = column_matching(B1,U{2});U2{3} = column_matching(C1,U{3});U2{4} = column_matching(D1,U{4});  norm_diff21   = diff_U_Uout( Utrue, U2  );%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%  options.e1 = 0.0001; options.e2 = 0.0001;tic[U,out] = perturbed_als_orthogonal(T,U0,options);t31=toc;% fprintf('perturbed orthogonal als\n')iter31 = out.iterations;fval3 = out.fval;rec3 = fval3(end);U{1} = column_matching(A01,U{1}); U{2} = column_matching(B1,U{2});U{3} = column_matching(C1,U{3});U{4} = column_matching(D1,U{4});  norm_diff31   = diff_U_Uout( Utrue, U  );      fprintf('iter: e0 %d, e0.0001 %d, e0.001 %d, e0.01 %d \n', iter01,iter11,iter21,iter31 ) fprintf('rel-err: e0 %.2f, e0.0001 %.2f, e0.001 %.2f, e0.01 %.2f \n', norm_diff01,norm_diff11,norm_diff21,norm_diff31)% fprintf('fval: e0 %.2f, e0.0001 %.2f, e0.001 %.2f, e0.01 %.2f, e0.1 %.2f\n', rec0,rec1,rec2,rec3,rec4) fprintf('time: e0 %.2f, e0.0001 %.2f, e0.001 %.2f, e0.01 %.2f \n', t01,t11,t21,t31)fprintf('time init %.2f\n',t_init) fprintf('gval_good_init = %.2f\n', g_v_good_init) fprintf('gval: e0 %.2f \n', gval01 ) result_mat_iter(iii,1:4) = [iter01 iter11 iter21 iter31   ]; result_mat_time(iii,1:4) = [t01+t_init t11+t_init t21+t_init t31+t_init   ];  result_mat_rel_err(iii,1:4) = [norm_diff01 norm_diff11 norm_diff21 norm_diff31 ];  save(['result_iter_time_err ' num2str(sz(1)) ' ' num2str(sz(2)) ' ' num2str(sz(3)) ', ' num2str(sz(4)) ', '  num2str(r) ', ' num2str(nl) '.mat'],'result_mat_iter','result_mat_time','result_mat_rel_err') endresult_mat_iter(end+1,:) = sum(result_mat_iter)/times;result_mat_time(end+1,:) = sum(result_mat_time)/times;result_mat_rel_err(end+1,:) = sum(result_mat_rel_err)/times;save(['result_iter_time_err ' num2str(sz(1)) ' ' num2str(sz(2)) ' ' num2str(sz(3)) ', ' num2str(sz(4)) ', '  num2str(r) ', ' num2str(nl) '.mat'],'result_mat_iter','result_mat_time','result_mat_rel_err')  